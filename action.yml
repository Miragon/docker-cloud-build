name: "Docker Cloud Build"
description: "Builds a docker image using Google Cloud Build and pushes it to Google Artifact Registry."
author: "Alexander Praschek <alexander.praschek@miragon.io>"
inputs:
  gcp-project-id:
    required: true
    description: >-
      The project ID to use for all GCP services.
  gcp-service-account-key:
    required: true
    description: >-
      Base64-encoded key file to use to authenticate against Google Cloud Services.
  gcp-cloud-storage-bucket:
    required: false
    description: >-
      The Cloud Storage bucket to use to temporarily store the Cloud Build input files. 
      
      By default, a bucket with the name `${projectId}_cloudbuild` will be used. 
      The uploaded files will be deleted after the build has finished. 
      You have to create the specified bucket first manually.
  gcp-registry-use-gcr:
    required: false
    description: >-
      Enables support for former Google Container Registry repositories migrated to Google Artifact Registry. Defaults to false.
  gcp-registry-host:
    required: false
    description: >-
      The host to use for Google Artifact Registry. Defaults to europe.pkg.dev.
      
      Find all supported values in the GCP documentation (https://cloud.google.com/artifact-registry/docs/repositories/repo-locations). 
      If you want to use a former GCR repository, this value must be set to one of the GCR endpoints (e.g. `eu.gcr.io`).
  gcp-registry-repository:
    required: false
    description: >-
      **Required unless you use GCR.** 
      The repository to use for Google Artifact Registry. 
      
      You have to create the specified repository first manually. 
      If you want to use a former GCR repository, you can omit this value. The `gcp-project-id` will be used instead. 
      If you want to use a repository in another project, you can still use this parameter to override the project ID default value.
  image-name:
    required: true
    description: >-
      The name of the image to build.
  image-sources:
    required: true
    description: >-
      The sources to use to build the image. 
      
      You can include any source files that are within your GitHub workspace, such as build artifacts or Dockerfiles. 
      The option also supports globstar wildcards such as `?`, `*`, `**`, or `[...]`. 
      Read https://github.com/actions/toolkit/tree/master/packages/glob for more details.
  image-tag-format:
    required: false
    description: >-
      The format to tag the built image with, if the build was caused by a commit. Builds caused by a tag are always
      labelled with that tag. The format string can contain the following list of parameters. All other parts of the
      string are treated as constants. Make sure you only use characters allowed in a docker tag.
      Defaults to "$BRANCH-$SHA-$YYYY.$MM.$DD-$HH.$mm.$SS", for example "main-4e83ab-2025.01.22-09.08.12".
      Time is based on the server timezone.
      $BRANCH     The branch name, normalized.
      $SHA        The 7-digit SHA of the commit
      $YYYY       The year in 4-digit format
      $MM         The month in 2-digit format
      $DD         The day in 2-digit format
      $HH         The hour in 2-digit format (24h)
      $mm         The minute in 2-digit-format
      $SS         The second in 2-digit-format
  image-tag-latest:
    required: false
    description: >-
      Whether the built image will be tagged with latest. Defaults to false.
  image-tag-branch-latest:
    required: false
    description: >-
      Whether the built image will be tagged with ${branchName}-latest. Defaults to false.
  image-tag-additional-tags:
    required: false
    description: >-
      A comma-separated list of additional tags to use for the built image. Defaults to false.
outputs:
  full-image-name:
    description: >-
      Contains the full image name with host, project ID and image name without tags.
  image-tags:
    description: >-
      Contains a comma-separated list of tags for the built image.
runs:
  using: "node16"
  main: "dist/index.js"
branding:
  color: "blue"
  icon: "package"
